node n1 {
    type router
    model router
    network-config {
	hostname n1
	!
	interface eth1
	 ip address 140.222.22.25/30
	!
	interface eth2
	 ip address 140.222.22.14/30
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {810.0 197.0}
    labelcoords {810.0 229.0}
    interface-peer {eth0 n10}
    services {IPForward StaticRoute}
    interface-peer {eth1 n2}
    interface-peer {eth2 n3}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	
	#/sbin/ip route add 10.9.8.0/24 via 140.222.22.25
	#/sbin/ip route add 10.9.8.0/24 via 140.222.22.13
	
	ip route add default via 140.222.22.26
	ip route add 140.222.18.0/23 via 140.222.22.13
	}
    }
}

node n2 {
    type router
    model router
    network-config {
	hostname n2
	!
	interface eth2
	 ip address 140.222.22.18/30
	!
	interface eth3
	 ip address 140.222.22.37/30
	 ipv6 address 2001:fef8:df80:4::2/64
	!
	interface eth1
	 ip address 140.222.22.29/30
	!
	interface eth0
	 ip address 140.222.22.26/30
	!
    }
    canvas c1
    iconcoords {1076.0 194.0}
    labelcoords {1076.0 226.0}
    interface-peer {eth0 n1}
    interface-peer {eth1 n4}
    interface-peer {eth2 n3}
    interface-peer {eth3 n7}
    services {IPForward StaticRoute}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 140.222.22.25
	#/sbin/ip route add 10.9.8.0/24 via 140.222.22.29
	#/sbin/ip route add 10.9.8.0/24 via 140.222.22.17
	#/sbin/ip route add 10.9.8.0/24 via 140.222.22.37
	#/sbin/ip route add 3ffe:4::/64 via 2001:fef8:df80:4::1
	
	ip route add default via 140.222.22.17
	ip route add 140.222.22.40/30 via 140.222.22.38
	ip route add 140.222.16.0/23 via 140.222.22.38
	ip route add 140.222.20.0/26 via 140.222.22.38
	
	ip -6 route add default via 2001:fef8:df80:4::1
	}
    }
}

node n3 {
    type router
    model router
    network-config {
	hostname n3
	!
	interface eth4
	 ip address 140.222.22.21/30
	!
	interface eth3
	 ip address 140.222.22.17/30
	!
	interface eth2
	 ip address 140.222.22.13/30
	!
	interface eth1
	 ip address 140.222.22.10/30
	!
	interface eth0
	 ip address 140.222.22.2/30
	!
    }
    canvas c1
    iconcoords {813.0 400.0}
    labelcoords {813.0 432.0}
    interface-peer {eth0 n5}
    interface-peer {eth1 n6}
    interface-peer {eth2 n1}
    interface-peer {eth3 n2}
    interface-peer {eth4 n15}
    services {IPForward StaticRoute}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 140.222.22.1
	#/sbin/ip route add 10.9.8.0/24 via 140.222.22.9
	#/sbin/ip route add 10.9.8.0/24 via 140.222.22.13
	#/sbin/ip route add 10.9.8.0/24 via 140.222.22.17
	#/sbin/ip route add 10.9.8.0/24 via 140.222.22.21
	
	ip route add 140.222.22.32/30 via 140.222.22.22
	ip route add 140.222.18.0/23 via 140.222.22.1
	ip route add default via 140.222.22.18
	ip route add 140.222.22.4/30 via 140.222.22.9
	}
    }
}

node n4 {
    type router
    model router
    network-config {
	hostname n4
	!
	interface eth1
	 ip address 140.222.22.33/30
	!
	interface eth0
	 ip address 140.222.22.30/30
	!
    }
    canvas c1
    iconcoords {1068.0 390.0}
    labelcoords {1068.0 422.0}
    interface-peer {eth0 n2}
    interface-peer {eth1 n15}
    services {IPForward StaticRoute}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 140.222.22.29
	#/sbin/ip route add 10.9.8.0/24 via 140.222.22.33
	
	ip route add default via 140.222.22.29
	}
    }
}

node n5 {
    type router
    model router
    network-config {
	hostname n5
	!
	interface eth0
	 ip address 140.222.18.1/23
	 ipv6 address 2001:fef8:df80::1/64
	!
	interface eth2
	 ip address 140.222.22.5/30
	!
	interface eth1
	 ip address 140.222.22.1/30
	!
    }
    canvas c1
    iconcoords {550.0 402.0}
    labelcoords {550.0 434.0}
    interface-peer {eth0 n12}
    interface-peer {eth1 n3}
    interface-peer {eth2 n6}
    services {IPForward StaticRoute}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 140.222.18.1
	#/sbin/ip route add 10.9.8.0/24 via 140.222.22.1
	#/sbin/ip route add 10.9.8.0/24 via 140.222.22.5
	
	ip route add 0.0.0.0/0 via 140.222.22.2
	}
    }
}

node n6 {
    type router
    model router
    network-config {
	hostname n6
	!
	interface eth0
	 ip address 140.222.22.9/30
	!
	interface eth1
	 ip address 140.222.22.6/30
	!
    }
    canvas c1
    iconcoords {647.0 566.0}
    labelcoords {647.0 598.0}
    interface-peer {eth0 n3}
    interface-peer {eth1 n5}
    services {IPForward StaticRoute}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 140.222.22.9
	#/sbin/ip route add 10.9.8.0/24 via 140.222.22.5
	
	ip route add 0.0.0.0/0 via 140.222.22.10
	ip route add 140.222.18.0/23 via 140.222.22.5
	}
    }
}

node n7 {
    type router
    model router
    network-config {
	hostname n7
	!
	interface eth0
	 ipv6 address 2001:fef8:df80:4::1/64
	 ip address 140.222.22.38/30
	!
	interface eth1
	 ipv6 address 2001:fef8:df80:3::2/64
	 ip address 140.222.22.41/30
	!
    }
    canvas c1
    iconcoords {1342.0 195.0}
    labelcoords {1342.0 227.0}
    interface-peer {eth0 n2}
    interface-peer {eth1 n8}
    services {IPForward StaticRoute}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 140.222.22.37
	#/sbin/ip route add 3ffe:4::/64 via 2001:fef8:df80:4::1
	#/sbin/ip route add 10.9.8.0/24 via 140.222.22.41
	#/sbin/ip route add 3ffe:4::/64 via 2001:fef8:df80:3::1
	
	ip route add default via 140.222.22.37
	ip route add 140.222.16.0/23 via 140.222.22.42
	ip route add 140.222.20.0/26 via 140.222.22.42
	
	ip -6 route add default via 2001:fef8:df80:3::1
	}
    }
}

node n8 {
    type router
    model router
    network-config {
	hostname n8
	!
	interface eth2
	 ipv6 address 2001:fef8:df80:3::1/64
	 ip address 140.222.22.42/30
	!
	interface eth1
	 ip address 140.222.16.1/23
	 ipv6 address 2001:fef8:df80:2::1/64
	!
	interface eth0
	 ip address 140.222.20.1/26
	 ipv6 address 2001:fef8:df80:1::1/64
	!
    }
    canvas c1
    iconcoords {1323.0 381.0}
    labelcoords {1323.0 413.0}
    interface-peer {eth0 n9}
    interface-peer {eth1 n14}
    services {IPForward StaticRoute}
    interface-peer {eth2 n7}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 140.222.20.1
	#/sbin/ip route add 3ffe:4::/64 via 2001:fef8:df80:1::1
	#/sbin/ip route add 10.9.8.0/24 via 140.222.16.1
	#/sbin/ip route add 3ffe:4::/64 via 2001:fef8:df80:2::1
	#/sbin/ip route add 10.9.8.0/24 via 140.222.22.41
	#/sbin/ip route add 3ffe:4::/64 via 2001:fef8:df80:3::1
	
	ip route add default via 140.222.22.41
	ip -6 route add default via 2001:fef8:df80:3::2
	}
    }
}

node n9 {
    type router
    model host
    network-config {
	hostname n9
	!
	interface eth0
	 ip address 140.222.20.2/26
	 ipv6 address 2001:fef8:df80:1::2/64
	!
    }
    canvas c1
    iconcoords {1564.0 344.0}
    labelcoords {1564.0 376.0}
    interface-peer {eth0 n8}
}

node n10 {
    type router
    model host
    network-config {
	hostname n10
	!
	interface eth0
	 ip address 192.168.5.1/24
	!
    }
    canvas c1
    iconcoords {829.0 52.0}
    labelcoords {829.0 84.0}
    interface-peer {eth0 n1}
}

node n11 {
    type router
    model host
    network-config {
	hostname n11
	!
	interface eth0
	 ip address 140.222.18.2/23
	 ipv6 address 2001:fef8:df80::3/64
	!
    }
    canvas c1
    iconcoords {322.0 129.0}
    labelcoords {322.0 161.0}
    interface-peer {eth0 n12}
    services {DefaultRoute SSH}
}

node n12 {
    type hub
    network-config {
	hostname n12
	!
    }
    canvas c1
    iconcoords {546.0 272.0}
    labelcoords {546.0 296.0}
    interface-peer {e0 n11}
    interface-peer {e1 n13}
    interface-peer {e2 n5}
}

node n13 {
    type router
    model host
    network-config {
	hostname n13
	!
	interface eth0
	 ip address 140.222.18.3/23
	 ipv6 address 2001:fef8:df80::2/64
	!
    }
    canvas c1
    iconcoords {311.0 320.0}
    labelcoords {311.0 352.0}
    interface-peer {eth0 n12}
}

node n14 {
    type router
    model host
    network-config {
	hostname n14
	!
	interface eth0
	 ip address 140.222.16.2/23
	 ipv6 address 2001:fef8:df80:2::2/64
	!
    }
    canvas c1
    iconcoords {1326.0 587.0}
    labelcoords {1326.0 619.0}
    interface-peer {eth0 n8}
}

node n15 {
    type router
    model router
    network-config {
	hostname n15
	!
	interface eth1
	 ip address 140.222.22.34/30
	!
	interface eth0
	 ip address 140.222.22.22/30
	!
    }
    canvas c1
    iconcoords {896.0 613.0}
    labelcoords {896.0 645.0}
    interface-peer {eth0 n3}
    interface-peer {eth1 n4}
    services {IPForward StaticRoute}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 140.222.22.21
	#/sbin/ip route add 10.9.8.0/24 via 140.222.22.33
	
	ip route add default via 140.222.22.21
	}
    }
}

link l1 {
    nodes {n8 n9}
    bandwidth 0
}

link l2 {
    nodes {n8 n14}
    bandwidth 0
}

link l3 {
    nodes {n10 n1}
    bandwidth 0
}

link l4 {
    nodes {n11 n12}
    bandwidth 0
}

link l5 {
    nodes {n13 n12}
    bandwidth 0
}

link l6 {
    nodes {n12 n5}
    bandwidth 0
}

link l7 {
    nodes {n5 n3}
    bandwidth 0
}

link l8 {
    nodes {n3 n6}
    bandwidth 0
}

link l9 {
    nodes {n5 n6}
    bandwidth 0
}

link l10 {
    nodes {n1 n2}
    bandwidth 0
}

link l11 {
    nodes {n1 n3}
    bandwidth 0
}

link l12 {
    nodes {n2 n4}
    bandwidth 0
}

link l13 {
    nodes {n3 n2}
    bandwidth 0
}

link l14 {
    nodes {n3 n15}
    bandwidth 0
}

link l15 {
    nodes {n15 n4}
    bandwidth 0
}

link l16 {
    nodes {n2 n7}
    bandwidth 0
}

link l17 {
    nodes {n7 n8}
    bandwidth 0
}

annotation a1 {
    iconcoords {184.0 12.0 761.0 709.0}
    type rectangle
    label {RED A}
    labelcolor black
    fontfamily {Arial}
    fontsize {36}
    color #48ff6e
    width 0
    border black
    rad 25
    effects {bold underline}
    canvas c1
}

annotation a2 {
    iconcoords {766.0 156.0 1147.0 502.0}
    type rectangle
    label {RED B}
    labelcolor black
    fontfamily {Gargi}
    fontsize {26}
    color #7864ff
    width 0
    border black
    rad 35
    effects {bold}
    canvas c1
}

annotation a3 {
    iconcoords {1163 106 1629 696}
    type rectangle
    label {RED C}
    labelcolor black
    fontfamily {Arial}
    fontsize {36}
    color #ffab00
    width 0
    border black
    rad 25
    canvas c1
}

canvas c1 {
    name {Canvas1}
    refpt {0 0 47.5791667 -122.132322 2.0}
    scale {150.0}
    size {1920 1080}
}

option global {
    interface_names yes
    ip_addresses yes
    ipv6_addresses no
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

